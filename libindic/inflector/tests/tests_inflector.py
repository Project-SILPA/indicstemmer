#!/usr/bin/env python
# -*- coding: utf-8 -*-

from testtools import TestCase
from libindic import stemmer, inflector


class MalayalamInflectorTest(TestCase):

    def setUp(self):
        super(MalayalamInflectorTest, self).setUp()
        self.stemmer = stemmer.Malayalam()
        self.inflector = inflector.Malayalam()
        self.verbosity = False

    def test_inflect(self):
        '''
        Test whether inflection returns original word when used with the output
        of stemmer.
        '''
        words = [u'അവനെ',
                 u'അവളെ',
                 u'രമയെ',
                 u'കഴിവിനെ',
                 u'ആപത്തിനെ',
                 u'വാകയെ',
                 u'അനിലിനെ',
                 u'അവരെ',
                 u'ചെമ്മണ്ണിനെ',
                 u'വാസുകിയെ',
                 u'വാസ്കോയെ',
                 u'വാത്മീകത്തിനെ',
                 u'ചക്കിനെ',
                 u'അച്ചിനെ',
                 u'പട്ടിനെ',
                 u'കത്തിനെ',
                 u'തേപ്പിനെ',
                 u'പയ്യിനെ',
                 u'കല്ലിനെ',
                 u'രാമുവിനെ',
                 u'കാടിനെ',
                 u'മകൾ',
                 u'അവനോട്',
                 u'അവളോട്',
                 u'രമയോട്',
                 u'കഴിവിനോട്',
                 u'ആപത്തിനോട്',
                 u'വാകയോട്',
                 u'അനിലിനോട്',
                 u'അവരോട്',
                 u'ചെമ്മണ്ണിനോട്',
                 u'വാസുകിയോട്',
                 u'വാസ്കോയോട്',
                 u'വാത്മീകത്തിനോട്',
                 u'ചക്കിനോട്',
                 u'അച്ചിനോട്',
                 u'പട്ടിനോട്',
                 u'കത്തിനോട്',
                 u'തേപ്പിനോട്',
                 u'പയ്യിനോട്',
                 u'കല്ലിനോട്',
                 u'രാമുവിനോട്',
                 u'കാടിനോട്',
                 u'അവന്',
                 u'അവൾക്ക്',
                 u'രമയ്ക്ക്',
                 u'കഴിവിന്',
                 u'ആപത്തിന്',
                 u'വാകയ്ക്ക്',
                 u'അനിലിന്',
                 u'അവർക്ക്',
                 u'ചെമ്മണ്ണിന്',
                 u'വാസുകിയ്ക്ക്',
                 u'വാസ്കോയ്ക്ക്',
                 u'വാത്മീകത്തിന്',
                 u'ചക്കിന്',
                 u'അച്ചിന്',
                 u'പട്ടിന്',
                 u'കത്തിന്',
                 u'തേപ്പിന്',
                 u'പയ്യിന്',
                 u'കല്ലിന്',
                 u'രാമുവിന്',
                 u'കാടിന്',
                 u'അവനാൽ',
                 u'അവളാൽ',
                 u'രമയാൽ',
                 u'കഴിവിനാൽ',
                 u'ആപത്തിനാൽ',
                 u'വാകയാൽ',
                 u'അനിലിനാൽ',
                 u'അവരാൽ',
                 u'ചെമ്മണ്ണിനാൽ',
                 u'വാത്മീകത്തിനാൽ',
                 u'ചക്കിനാൽ',
                 u'അച്ചിനാൽ',
                 u'പട്ടിനാൽ',
                 u'കത്തിനാൽ',
                 u'തേപ്പാൽ',
                 u'പയ്യാൽ',
                 u'കല്ലാൽ',
                 u'രാമുവാൽ',
                 u'രാമുവിനാൽ',
                 u'കാടിനാൽ',
                 u'അവന്റെ',
                 u'അവന്റെ',
                 u'അവളുടെ',
                 u'രമയുടെ',
                 u'കഴിവിന്റെ',
                 u'ആപത്തിന്റെ',
                 u'വാകയുടെ',
                 u'അനിലിന്റെ',
                 u'അവരുടെ',
                 u'ചെമ്മണ്ണിന്റെ',
                 u'വാത്മീകത്തിന്റെ',
                 u'ചക്കിന്റെ',
                 u'അച്ചിന്റെ',
                 u'പട്ടിന്റെ',
                 u'കത്തിന്റെ',
                 u'തേപ്പിന്റെ',
                 u'പയ്യിന്റെ',
                 u'കല്ലിന്റെ',
                 u'രാമുവിന്റെ',
                 u'അവന്റേത്',
                 u'കാടിന്റെ',
                 u'കാടിന്റേത്',
                 u'അവനിൽ',
                 u'അവളിൽ',
                 u'രമയിൽ',
                 u'കഴിവിൽ',
                 u'ആപത്തിൽ',
                 u'വാകയിൽ',
                 u'അനിലിൽ',
                 u'അവരിൽ',
                 u'ചെമ്മണ്ണിൽ',
                 u'വാത്മീകത്തിൽ',
                 u'ചക്കിൽ',
                 u'അച്ചിൽ',
                 u'പട്ടിൽ',
                 u'കത്തിൽ',
                 u'തേപ്പിൽ',
                 u'പയ്യിൽ',
                 u'കല്ലിൽ',
                 u'രാമുവിൽ',
                 u'കാട്ടിൽ',
                 u'അവനും',
                 u'അവളും',
                 u'രമയും',
                 u'കഴിവും',
                 u'മനുഷ്യരും',
                 u'അതിലും',
                 u'ഇന്നും',
                 u'ആപത്തും',
                 u'വാകയും',
                 u'അനിലും',
                 u'അവരും',
                 u'ചെമ്മണ്ണും',
                 u'വാത്മീകവും',
                 u'ചക്കും',
                 u'അച്ചും',
                 u'പട്ടും',
                 u'കത്തും',
                 u'തേപ്പും',
                 u'പയ്യും',
                 u'കല്ലും',
                 u'പാനീയവും',
                 u'രാമുവും',
                 u'കാടും',
                 u'അണ്ണാന്മാർ',
                 u'അവളുമാർ',
                 u'കാക്കകൾ',
                 u'പശുക്കൾ',
                 u'കഴിവുകൾ',
                 u'അതിലും',
                 u'ആപത്തുകൾ',
                 u'വാകകൾ',
                 u'വാത്മീകങ്ങൾ',
                 u'ചക്കുകൾ',
                 u'അച്ചുകൾ',
                 u'പട്ടുകൾ',
                 u'കത്തുകൾ',
                 u'തേപ്പുകൾ',
                 u'പയ്യുകൾ',
                 u'കല്ലുകൾ',
                 u'ഭൂതങ്ങൾ',
                 u'കാടുകൾ',
                 u'മാനുകൾ',
                 u'മൊല്ലാക്കമാർ',
                 u'പഠിച്ചു',
                 u'അമർത്തി',
                 u'കിടന്നു',
                 u'മലർന്നു',
                 u'അനക്കി',
                 u'പറഞ്ഞു',
                 u'പഠിക്കുന്നു',
                 u'അമർത്തുന്നു',
                 u'കിടക്കുന്നു',
                 u'പറയുന്നു',
                 u'തുടരുന്നു',
                 u'കമിഴ്ന്നു',
                 u'പറന്നു',
                 u'പഠിക്കുന്ന']
        for word in words:
            root_word = self.stemmer.singleencode(word)
            stem_result = self.stemmer.stem(root_word)[root_word]
            stem = stem_result['stem']
            tag_list = stem_result['inflection']
            inflection_result = self.inflector.inflect(stem, tag_list)
            if self.verbosity:
                print(word)
                print(stem)
                print(tag_list)
                print(inflection_result)
            assert root_word == inflection_result
